openapi: 3.0.0
info:
  title: Monitoring Service API
  description: This API allows users to manage readings and meters
  version: 1.0.0
servers:
  - url: http://localhost:8080/SpringFrameworkApp_war_exploded
tags:
  - name: Authentication
    description: "Публичный API для аутентификации"
  - name: Readings
    description: "Закрытый API для работы с показаниями"
  - name: Admin
    description: "Закрытый API для админа"
  - name: Meter
    description: "Закрытый API для админа для управления счетчиками"
paths:
  /admin/readings:
    get:
      tags:
        - Admin
        - Readings
      summary: Get the actual readings for the current user
      security:
        - basicAuth: []
      responses:
        '200':
          description: A list of readings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReadingDto'
        '401':
          description: Unauthorized
  /admin/readings?date={date}:
    get:
      tags:
        - Admin
        - Readings
      summary: Get the readings for the current user by month
      security:
        - basicAuth: []
      parameters:
        - name: date
          in: query
          required: true
          schema:
            type: string
            format: year-month
      responses:
        '200':
          description: A list of readings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReadingDto'
        '400':
          description: Invalid date format
        '401':
          description: Unauthorized
  /admin/readings/history:
    get:
      tags:
        - Admin
        - Readings
      summary: Get the history of readings for the current user
      security:
        - basicAuth: []
      responses:
        '200':
          description: A list of readings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReadingDto'
        '401':
          description: Unauthorized
  /admin/meter:
    post:
      tags:
        - Admin
        - Meter
      summary: Create a new meter
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeterDto'
      responses:
        '201':
          description: The created meter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeterDto'
        '400':
          description: Invalid meter data
        '401':
          description: Unauthorized
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDto'
      responses:
        '201':
          description: The registered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
        '400':
          description: Invalid user data
  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login with an existing user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDto'
      responses:
        '200':
          description: Logged in
        '400':
          description: Invalid credentials
  /readings:
    post:
      tags:
        - Readings
      summary: "POST readings"
      operationId: "createReadings"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReadingDto"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReadingDto"
  /readings?date={date}:
    get:
      tags:
        - Readings
      summary: Get the readings for the current user by month
      security:
        - basicAuth: [ ]
      parameters:
        - name: date
          in: query
          required: true
          schema:
            type: string
            format: year-month
      responses:
        '200':
          description: A list of readings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReadingDto'
        '400':
          description: Invalid date format
        '401':
          description: Unauthorized
  /readings/history:
    get:
      tags:
        - Readings
      summary: "GET readings/history"
      operationId: "getHistory"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
               type: "array"
               items:
                $ref: "#/components/schemas/ReadingDto"
components:
  schemas:
    ReadingDto:
      type: "object"
      properties:
        meterType:
          type: "integer"
          format: "int32"
        reading:
          type: "integer"
          format: "int64"
        collectedDate:
          type: "string"
    YearMonth:
      type: "object"
      properties:
        year:
          type: "integer"
          format: "int32"
        month:
          type: "integer"
          format: "int32"
    MeterDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        serialNumber:
          type: string
          minLength: 10
          maxLength: 10
        type:
          type: string
          enum: [ELECTRICITY, WATER, GAS]
        userId:
          type: integer
          format: int64
    UserDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        email:
          type: string
          format: email
        password:
          type: string
          format: password
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic